// This file is auto-generated by @hey-api/openapi-ts

export const AdminBadRequestSchema = {
    type: 'object',
    required: ['message3', 'myName'],
    properties: {
        message3: {
            type: 'string'
        },
        myName: {
            type: 'string'
        }
    }
} as const;

export const AdminInternalServerErrorSchema = {
    type: 'object',
    required: ['message2', 'hisName'],
    properties: {
        hisName: {
            type: 'string'
        },
        message2: {
            type: 'string'
        }
    }
} as const;

export const AdminLoginInputSchema = {
    type: 'object',
    required: ['username', 'password', 'fullName'],
    properties: {
        fullName: {
            type: 'string'
        },
        password: {
            type: 'string'
        },
        username: {
            type: 'string'
        }
    }
} as const;

export const AdminLoginResponseSchema = {
    type: 'object',
    required: ['message', 'username', 'yourName'],
    properties: {
        message: {
            type: 'string'
        },
        username: {
            type: 'string'
        },
        yourName: {
            type: 'string'
        }
    }
} as const;

export const AuthForgotPasswordInputSchema = {
    type: 'object',
    required: ['email'],
    properties: {
        email: {
            type: 'string',
            description: 'Email address of the user.',
            example: 'princeraj9137@gmail.com'
        }
    }
} as const;

export const AuthLoginInputSchema = {
    type: 'object',
    description: 'Credentials of the user.',
    required: ['email', 'password'],
    properties: {
        email: {
            type: 'string',
            description: 'Email address of the user.',
            example: 'princeraj9137@gmail.com'
        },
        password: {
            type: 'string',
            description: 'Password of the user.',
            example: 'admin790'
        }
    }
} as const;

export const AuthRegisterInputSchema = {
    type: 'object',
    required: ['fullName', 'email', 'password', 'confirmPassword'],
    properties: {
        confirmPassword: {
            type: 'string',
            description: 'Password Confirmation.',
            example: 'admin790'
        },
        email: {
            type: 'string',
            description: 'Email address of the user.',
            example: 'princeraj9137@gmail.com'
        },
        fullName: {
            type: 'string',
            description: 'Full name of the user.',
            example: 'Jamsr World'
        },
        password: {
            type: 'string',
            description: `Password of the user.
Min. 8 characters.`,
            example: 'admin790'
        }
    }
} as const;

export const AuthRegisterVerifyInputSchema = {
    allOf: [
        {
            '$ref': '#/components/schemas/AuthRegisterInput'
        },
        {
            type: 'object',
            required: ['code'],
            properties: {
                code: {
                    type: 'integer',
                    format: 'int32',
                    description: 'Verification code (OTP).',
                    example: 1234,
                    minimum: 0
                }
            }
        }
    ]
} as const;

export const AuthResetPasswordInputSchema = {
    type: 'object',
    required: ['email', 'otp', 'password', 'confirmPassword'],
    properties: {
        confirmPassword: {
            type: 'string',
            description: 'Password Confirmation.',
            example: 'admin790'
        },
        email: {
            type: 'string',
            description: 'Email address of the user.',
            example: 'princeraj9137@gmail.com'
        },
        otp: {
            type: 'integer',
            format: 'int32',
            description: 'Verification code (OTP).',
            example: 1234,
            minimum: 0
        },
        password: {
            type: 'string',
            description: 'New Password to set.',
            example: 'admin790'
        }
    }
} as const;

export const ResponseWithMessageSchema = {
    type: 'object',
    required: ['message'],
    properties: {
        message: {
            type: 'string'
        }
    }
} as const;

export const UpdateProfileSchema = {
    type: 'object',
    required: ['full_name'],
    properties: {
        full_name: {
            type: 'string'
        }
    }
} as const;

export const UserProfileSchema = {
    type: 'object',
    required: ['id', 'email', 'fullName', 'status', 'role', 'createdAt', 'updatedAt'],
    properties: {
        createdAt: {
            type: 'string'
        },
        email: {
            type: 'string'
        },
        fullName: {
            type: 'string'
        },
        id: {
            type: 'string'
        },
        role: {
            '$ref': '#/components/schemas/UserRole'
        },
        status: {
            '$ref': '#/components/schemas/UserStatus'
        },
        updatedAt: {
            type: 'string'
        }
    }
} as const;

export const UserRoleSchema = {
    type: 'string',
    enum: ['Admin', 'User']
} as const;

export const UserStatusSchema = {
    type: 'string',
    enum: ['Active', 'Blocked']
} as const;